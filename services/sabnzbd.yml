kind: Deployment
apiVersion: apps/v1
metadata:
  name: sabnzbd
  namespace: media
spec:
  selector:
    matchLabels:
      app: sabnzbd
  replicas: 1
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      containers:
      - name: sabnzbd
        image: linuxserver/sabnzbd
        imagePullPolicy: Always
        env:
        - name: PUID
          value: "816"
        - name: PGID
          value: "816"
        - name: TZ
          value: "Africa/Johannesburg"
        - name: VERSION
          value: "latest"
        - name: UMASK_SET
          value: "022"
        - name: PLEX_CLAIM
          value: "claim-R-vi57Dcwx8aPxBBYMg8"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /config
        - name: complete
          mountPath: complete
        - name: watch-folder
          mountPath: /watch
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: sabnzbd    
      - name: complete
        persistentVolumeClaim:
          claimName: sabnzbd-complete
      - name: watch-folder
        persistentVolumeClaim:
          claimName: watch-folder

---
kind: Service
apiVersion: v1
metadata:
  name: sabnzbd
  namespace: media
spec:
  selector:
    app: sabnzbd
  ports:
  - protocol: TCP
    port: 8080


---
kind: Ingress
apiVersion: networking.k8s.io/v1 
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "15"      
  name: sabnzbd
  namespace: media
spec:
  rules:
    - host: sabnzbd.steenkamps.org
      http:
        paths:
          - pathType: Prefix
            path: /              
            backend:
              service:
                name: sabnzbd
                port: 
                  number: 5299

---
# sabnzbd.persistentvolume
kind: PersistentVolume
apiVersion: v1
metadata:
  name: sabnzbd
  labels:
    type: local
spec:
  capacity:
    storage: 100Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /data/sabnzbd
  
---
# sabnzbd.persistentvolumeclaim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: media
  name: sabnzbd
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi

---
# sabnzbd-complete.persistentvolume
kind: PersistentVolume
apiVersion: v1
metadata:
  name: sabnzbd-complete
  labels:
    type: local
spec:
  capacity:
    storage: 100Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /data/sabnzbd-complete
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - ubuntu
---
# sabnzbd-complete.persistentvolumeclaim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: media
  name: sabnzbd-complete
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi

---
# watch-folder.persistentvolume
kind: PersistentVolume
apiVersion: v1
metadata:
  name: watch-folder
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /data/watch-folder
  
---
# watch-folder.persistentvolumeclaim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: media
  name: watch-folder
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
